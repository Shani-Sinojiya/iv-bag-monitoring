version: '3.8'

services:
  # Main FastAPI application
  app:
    build: .
    container_name: iot-app
    ports:
      - "${PORT:-8000}:8000"
    env_file:
      - .env
    environment:
      - MONGODB_URL=mongodb://mongo:27017
      - DATABASE_NAME=${DATABASE_NAME:-iot_project}
      - COLLECTION_NAME=${COLLECTION_NAME:-sensor_data}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - WEIGHT_THRESHOLD_MIN=${WEIGHT_THRESHOLD_MIN:-0}
      - WEIGHT_THRESHOLD_MAX=${WEIGHT_THRESHOLD_MAX:-1000}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - ALLOW_CREDENTIALS=${ALLOW_CREDENTIALS:-true}
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - app-logs:/app/logs
      - app-data:/app/data
    restart: unless-stopped
    networks:
      - iot-network

  # MongoDB database
  mongo:
    image: mongo:7.0
    container_name: iot-mongo
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${DATABASE_NAME:-iot_project}
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  iot-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local
  app-data:
    driver: local
  app-logs:
    driver: local
